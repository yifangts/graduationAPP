/**
 * Created by Beiing on 2017/4/21.
 */
// var echarts = require('echarts');
// var $ =require('jquery');
var $ =jQuery;
var Xarray=createX(.02,2.0);
var voltage={
        name:"voltage",
        title:"刺激电压与肌肉收缩特征",
        xData:Xarray,
        tip:['收缩力'],
        color:"rgb(219,50,51)",
        chart_end:100,
        yData:createY(Xarray,[ '1.2', '1.3', 15,  '1.3', '1.2'],1.38)
    },
    frequency={
        name:"frequency",
        title:"刺激频率与肌肉收缩特征",
        xData:[1,2,3,4,5,6,7,8,9,10,11,12],
        tip:['收缩力'],
        color:"rgb(0,136,212)",
        chart_end:100,
        yData:[1, 1.5, 8, 10, 11, 11.5, 11.7, 11.8, 11.2, 6, 2, 1]
    },
    single_xtemp=[.2,.4,.6,.8,1],
    single_ytemp=['.05', '.1', 15,  '.1', '.05'];

/**
 * 根据频率的值产生相应的数据,每次只产生一组数据,每组数据为100,获取多次的时候需要拼接数组
 * y轴数据需要根据频率手动产生...
 * @param value
 */
function frequency_data(value) {
    var xData=[],
        i=0,
        j=1;
    for(;i<10;i++){
        j=0;
        for(;j<10;j++){
            xData.push(value-1+"."+i+j+'Hz')
        }
    }
    // console.log(xData)
    var yData;
    switch (value){
        case 1:
            yData=[
                0,.01,0.02,0.04,.05,0.06,.07,0.08,0.085,0.09,0.095,.1,.2,.4,.65,.95,
                1.4,2.2,3.2,4.2,5.2,6.2,7.2,8.2,9.2,10.2,11.2,
                11.6,12,12.4,12.8,13.1,13.3,13.5,13.65,13.8,13.9,
                14,14.05,14.1,14.05,14,13.8,13.5,13.2,12.35,11.5,10.75,
                10.0,9.3,8.6,7.95,7.3,6.7,6.25,5.8,5.5,5.2,4.9,
                4.6,4.35,4.1,3.8,3.55,3.3,3.05,2.8,2.55,
                2.35,2.15,1.9,1.7,1.5,1.3,1.1,.9,.75,.55,
                .4,.3,.2,0.165,.13,.11,.09,.08,.07,.065,.06,
                .055,.05,.045,.04,.035,.03,.025,.02,.015,.01,0
            ];
            break;
        case 2:
            yData=[
                0,0,0,0,0,.2,.6,1.2,1.8,2.4,
                3.2,4,5,6,7,8,9,10,10.8,11.6,
                12.4,13.1,13.5,13.8,14,14.1,14,13.2,11.5,
                10.0,8.6,7.3,6.1,4.9,3.8,2.8,1.9,1.4,
                1.1,1.2,1.23,1.35,1.46,1.8,2.4,
                3.2,4,5,6,7,8,9,10,10.8,11.6,
                12.4,13.1,13.5,13.8,14,14.1,14,13.2,11.5,
                10.0,8.6,7.3,6.1,5.5,4.9,4.35,
                3.8,3.3,2.8,2.35,1.9,1.5,1.1,
                .8,.6,.3,0.165,.13,.11,.09,.08,.07,.065,.06,
                .055,.05,.045,.04,.035,.03,.025,.02,.015,.01,0
            ];
            break;
        case 3:
            yData=[
                0,0,0,0,0,.2,.6,1.2,1.8,2.4,
                3.2,4,5,6,7,8,9,9.5,10.3,10.8,
                11.3,11.6,12,12.3,12.5,12.4,12.1,11.7,11,
                9.5,8.1,7.3,
                7,8,9,10,10.8,11.6,
                12.4,13.1,13.5,13.8,14,14.1,14,13.2,11.5,
                10.0,8.6,7.3,
                8,9,10,10.8,11.6,
                12.4,13.6,14.2,15.1,15.6,16,15.9,15.6,15,14.3,13.4,11.5,
                10.0,8.6,7.3,
                6.1,5.5,4.9,4.35,
                3.8,3.3,2.8,2.35,1.9,1.5,1.1,
                .8,.6,.3,0.165,.13,.11,.09,.08,.07,.065,.06,
                .05,.045,.04,.035,.03,.02,.01,0
            ];
            break;
        case 4:
            yData=[
                0, 0, 0, 0, 0, 0.22, 0.66, 1.32, 1.98, 2.64, 3.52,4.4, 5.5, 6.6,
                8.8, 10.45, 11.88, 12.76, 13.53, 13.64, 12.87, 10.45, 8.91, 7.7,7.8,8.0,8.3,8.6,9.3,

                9.9,11, 11.88, 13.64, 14.85, 15.4, 15.4, 12.65, 9.46, 8.8,8.9,9.0,9.2,9.9,10.5,

                11,12, 12.76, 14.96, 16.61, 17.6, 17.16, 15.73, 12.65, 11,11.1,11.2,11.4,11.7,
                12.1,13, 14.04, 16.46, 18.27, 19.36, 18.88, 17.3, 13.92, 12.1,

                9.46, 8.03, 6.71,6.05, 5.39, 4.79, 4.18,
                3.63, 3.08, 2.59, 2.09, 1.65, 1.21, 0.88, 0.66, 0.33, 0.18,
                0.14, 0.12, 0.1, 0.09, 0.08, 0.07, 0.07, 0.06, 0.05,
                0.04, 0.04, 0.03, 0.02, 0.01, 0
            ];
            break;
        case 5:
            yData=[
                0, 0, 0, 0, 0.3, 0.73, 1.45, 2.18, 2.9, 3.87, 4.84, 6.05, 7.26,
                9.68, 11.5, 13.07, 14.04, 14.88, 15, 14.16, 11.5, 9.8, 8.58, 8.8, 9.13, 10.23,
                10.89, 12.1, 13.07, 15, 16.34, 16.94, 16.94, 13.92, 10.41, 9.79, 9.9, 10.12, 11.55,
                 14.04, 16.46, 18.27, 19.36, 18.88, 17.3, 13.92, 12.1, 12.21, 12.32, 12.87,
                13.31, 14.3, 15.44, 18.11, 20.1, 21.3, 20.77, 19.03, 15.31,

                15.73, 16.98, 19.92, 22.11, 23.43, 22.85, 20.93, 16.84,13.31,
                10.41, 8.83, 7.38, 6.66, 5.93, 5.27, 4.6, 3.99, 3.39, 2.85, 2.3, 1.81, 1.33, 0.97, 0.73, 0.36, 0.2, 0.15, 0.13, 0.11, 0.1, 0.09, 0.08, 0.08, 0.07, 0.06, 0.04, 0.04, 0.03, 0.02, 0.01, 0
            ];
            break;
        case 6:
            yData=[
                0, 0, 0, 0, 0.33, 0.8, 1.59, 2.4, 3.19, 4.26, 5.32, 6.66, 7.99,
                9.68, 11.5, 13.07, 14.04, 14.88, 15, 14.16, 11.5, 9.8, 9.7,
                10.65, 12.65, 14.38, 15.44, 16.37, 16.5, 15.58, 12.65, 10.78,9.68, 10.04,
                12.1, 13.07, 15, 16.34, 16.94, 16.94, 13.92, 10.41, 11.55,
                13.31, 14.38, 16.5, 17.97, 18.63, 18.63, 15.31, 11.45,
                13.31, 15.44, 18.11, 20.1, 21.3, 20.77, 19.03, 15.31,
                15, 15.73, 16.98, 19.92, 22.11, 23.43, 22.85, 20.93, 16.84,
                11.45, 9.71, 8.12, 7.33, 6.52, 5.8, 5.06, 4.39, 3.73, 3.14, 2.53, 1.99, 1.46, 1.07, 0.8, 0.4, 0.22, 0.17, 0.14, 0.12, 0.11, 0.1, 0.09, 0.09, 0.08, 0.07, 0.04, 0.04, 0.03, 0.02, 0.01, 0
            ];
            // console.log(yData.map((i)=>Number((i*1.1).toFixed(2))))
            break;
        case 7:
            yData=[
                0, 0, 0, 0, 0.36, 0.88, 1.75, 2.64, 3.51, 4.69, 5.85,
                7.99, 9.68, 11.5, 13.07, 14.04, 14.88, 15, 14.16, 11.5,
                10.65, 12.65, 14.38, 15.44, 16.37, 16.5, 15.58, 12.65, 10.78,
                11.72, 13.92, 15.82, 16.98, 18.01, 18.15, 17.14, 13.92,
                13.31, 14.38, 16.5, 17.97, 18.63, 18.63, 15.31,
                12.71, 15.82, 18.15, 19.77, 20.49, 20.49, 16.84,
                14.64, 16.98, 19.92, 22.11, 23.43, 22.85, 20.93, 16.84, 16.5,
                17.3, 18.68, 21.91, 24.32, 25.77, 25.14, 23.02, 18.52, 12.6, 10.68,
                8.93, 8.06, 7.17, 6.38, 5.57, 4.83, 4.1, 3.45, 2.78, 2.19, 1.61, 1.18, 0.88, 0.44, 0.24, 0.19, 0.15, 0.13, 0.12, 0.11, 0.1, 0.1, 0.09, 0.08, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            // console.log(yData.map((i)=>Number((i*1.1).toFixed(2))))
            // console.log([].map((i)=>Number((i/1.1).toFixed(2))))
            break;
        case 8:
            yData=[
                0, 0, 0, 0, 0.4, 0.97, 1.93, 2.9, 3.86, 5.16, 6.44,
                8.79, 10.65, 12.65, 14.38, 15.44, 16.37, 16.5, 15.58, 12.65, 11.72,
                13.92, 15.82, 16.98, 18.01, 18.15, 17.14, 13.92,
                12.89, 15.31, 19.81, 19.96, 18.85, 15.31, 14.64,
                15.82, 18.15, 19.77, 20.49, 20.49, 16.84,
                17.4, 19.96, 21.75, 22.54, 22.54, 18.52, 16.1,
                18.27, 20.96, 22.84, 23.67, 23.67, 19.45,
                18.68, 21.91, 24.32, 25.77, 25.14, 18.52, 18.15,
                24.1, 26.75, 28.35,28.4, 27.65, 25.32, 20.37,
                13.86, 11.75, 9.82, 8.87, 7.89, 7.02, 6.13, 5.31, 4.51, 3.8, 3.06, 2.41, 1.77, 1.3, 0.97, 0.48, 0.26, 0.21, 0.17, 0.14, 0.13, 0.12, 0.11, 0.11, 0.1, 0.09, 0.04, 0.04, 0.03, 0.02, 0.01, 0
            ];
            break;
        case 9:
            yData=[
                0, 0, 0, 0, 0.44, 1.07, 2.12, 3.19, 4.25, 5.68, 7.08,
                9.67, 11.72, 13.92, 15.82, 16.98, 18.01, 18.15, 17.14, 13.92, 12.89,
                18.68, 19.81, 19.96, 18.85, 15.31, 14.18,
                21.79, 21.96, 20.74, 16.84, 16.1,
                19.96, 21.75, 22.54, 22.54,
                18.52, 19.14, 21.96, 23.93, 24.79, 24.79, 20.37,
                20.1, 23.06, 25.12, 26.04, 26.04, 21.39, 20.55,
                21.11, 24.21, 26.38, 27.34, 27.34, 22.46, 21.58,
                24.1, 26.75, 28.35, 27.65, 26.51, 29.43, 31.19, 31.24, 30.41, 27.85, 22.41, 15.25, 12.93, 10.8, 9.76, 8.68, 7.72, 6.74, 5.84, 4.96, 4.18, 3.37, 2.65, 1.95, 1.43, 1.07, 0.53, 0.29, 0.23, 0.19, 0.15, 0.14, 0.13, 0.12, 0.12, 0.11, 0.1, 0.04, 0.04, 0.03, 0.02, 0.01, 0
            ];
            // console.log(yData.map((i)=>Number((i*1.1).toFixed(2))))
            // console.log([17.4, 19.96, 21.75, 22.54, 22.54, 18.52, 16.1].map((i)=>Number((i*1.05).toFixed(2))))
            break;
        case 10:
            yData=[
                0, 0, 0, 0, 0.44, 1.07, 2.12, 3.19, 4.25, 5.68, 7.08,
                9.67, 11.72, 13.92, 16.98, 18.01, 18.15, 17.14, 13.92, 12.89,
                18.68, 19.81, 19.96, 18.85, 15.31, 14.18,
                21.96, 20.74, 16.84, 16.1,
                19.96, 21.75, 22.54, 22.54,
                18.52, 19.14, 23.93, 24.79, 24.79, 20.37,
                20.1, 25.12, 26.04, 26.04, 21.39, 20.55,
                21.11, 24.21, 26.38, 27.34, 22.46, 21.58,
                22.17, 25.42, 28.71, 23.58, 22.66,
                24.1, 26.75, 28.35, 27.65, 26.51, 29.43, 31.19, 31.24, 30.41, 27.85, 22.41, 15.25, 12.93, 10.8, 9.76, 8.68, 7.72, 6.74, 5.84, 4.96, 4.18, 3.37, 2.65, 1.95, 1.43, 1.07, 0.53, 0.29, 0.23, 0.19, 0.15, 0.14, 0.13, 0.12, 0.12, 0.11, 0.1, 0.04, 0.04, 0.03, 0.02, 0.01, 0
            ];
            // console.log(yData.map((i)=>Number((i*1.1).toFixed(2))))
            // console.log([17.4, 19.96, 21.75, 22.54, 22.54, 18.52, 16.1].map((i)=>Number((i*1.05).toFixed(2))))
            break;
        case 11:
            yData=[
                0, 0, 0, 0, 0.48, 1.18, 2.33, 3.51, 4.68, 6.25, 7.79, 10.64, 12.89, 15.31, 18.68, 19.81, 19.96, 18.85, 15.31, 14.18, 20.55, 21.79, 21.96, 20.74, 16.84, 15.6, 24.16, 22.81, 18.52, 17.71, 21.96, 24.79, 24.79, 20.37, 21.05,27.27, 27.27, 22.41, 22.11, 28.64, 28.64, 23.53, 22.61, 23.22, 29.02, 30.07, 24.71, 23.74, 24.39, 27.96, 31.58, 25.94, 24.93, 26.51,
                29.43, 31.19, 30.41, 29.16,
                30.9, 32.75, 31.93, 30.62,
                32.37, 34.31, 34.36, 33.45, 30.64, 24.65, 16.78, 14.22, 11.88, 10.74, 9.55, 8.49, 7.41, 6.42, 5.46, 4.6, 3.71, 2.92, 2.15, 1.57, 1.18, 0.58, 0.32, 0.25, 0.21, 0.17, 0.15, 0.14, 0.13, 0.13, 0.12, 0.11, 0.04, 0.04, 0.03, 0.02, 0.01, 0
            ];
            // console.log(yData.map((i)=>Number((i*1.1).toFixed(2))))
            // console.log([17.4, 19.96, 21.75, 22.54, 22.54, 18.52, 16.1].map((i)=>Number((i*1.05).toFixed(2))))
            break;
        case 12:
            yData=[
                0, 0, 0, 0, 0.53, 1.3, 2.56, 3.86, 5.15, 6.88, 8.57, 11.7, 14.18, 16.84,21.79, 21.96, 20.74, 16.84,
                15.6,  23.97, 24.16, 22.81, 18.52,
                25.17, 25.37, 23.95, 19.45,
                26.58, 25.09, 20.37, 19.48, 24.16, 27.27, 27.27, 22.41, 23.16, 30, 30, 24.65, 24.32, 31.5, 31.5, 25.88, 24.87, 25.54, 33.08, 27.18, 26.11, 26.83, 30.76, 34.74, 28.53, 27.42, 29.16, 32.37, 34.31, 33.45, 32.08, 33.99, 36.03, 35.12, 33.68, 35.61, 37.74, 37.8, 36.8, 33.7, 27.12, 18.46, 15.64, 13.07, 11.81, 10.51, 9.34, 8.15, 7.06, 6.01, 5.06, 4.08, 3.21, 2.37, 1.73, 1.3, 0.64, 0.35, 0.28, 0.23, 0.19, 0.17, 0.15, 0.14, 0.14, 0.13, 0.12, 0.04, 0.04, 0.03, 0.02, 0.01, 0
            ];
            break;
        case 13:
            yData=[
                0, 0, 0, 0, 0.58, 1.43, 2.82, 4.25, 5.67, 7.57, 9.43, 12.87, 15.6, 18.52, 23.97, 24.16, 22.81, 18.52, 17.16, 26.37, 26.58, 25.09, 20.37, 27.69, 27.91, 21.39, 29.24, 27.6, 22.41,
                21.43, 30, 30, 24.65,
                22.5, 31.5, 31.5, 25.88,
                25.48, 33, 33, 27.12, 26.75, 34.65, 28.47, 27.36, 28.09, 36.39, 29.9, 28.72, 29.51, 33.84,31.38, 30.16, 32.08, 35.61, 37.74, 36.8, 35.29, 37.39, 39.63, 38.63, 37.05, 39.17, 41.51, 41.58, 40.48, 37.07, 29.83, 20.31, 17.2, 14.38, 12.99, 11.56, 10.27, 8.97, 7.77, 6.61, 5.57, 4.49, 3.53, 2.61, 1.9, 1.43, 0.7, 0.39, 0.31, 0.25, 0.21, 0.19, 0.17, 0.15, 0.15, 0.14, 0.13, 0.04, 0.04, 0.03, 0.02, 0.01, 0
            ];
            break;
        case 14:
            yData=[
                0, 0, 0, 0, 0.64, 1.57, 3.1, 4.68, 6.24, 8.33, 10.37, 14.16, 17.16, 20.37, 26.37, 26.58, 25.09, 20.37, 18.88, 29.01, 29.24, 27.6, 22.41, 30.46, 30.7, 23.53, 32.16, 30.36, 24.65, 23.57,33, 27.12, 24.75, 34.65, 28.47, 28.03, 36.3,29.83, 29.43, 31.32, 30.1, 30.9,
                32.89,
                31.59, 32.46, 37.22, 34.52, 33.18,
                33.17, 34.08, 39.08, 36.25, 34.84,
                35.29, 39.17, 41.51, 40.48, 38.82, 41.13, 43.59, 42.49, 40.76, 43.09, 45.66, 45.74, 44.53, 40.78, 32.81, 22.34, 18.92, 15.82, 14.29, 12.72, 11.3, 9.87, 8.55, 7.27, 6.13, 4.94, 3.88, 2.87, 2.09, 1.57, 0.77, 0.43, 0.34, 0.28, 0.23, 0.21, 0.19, 0.17, 0.17, 0.15, 0.14, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 15:
            yData=[
                0, 0, 0, 0, 0.7, 1.73, 3.41, 5.15, 6.86, 9.16, 11.41, 15.58, 18.88, 22.41, 29.01, 29.24, 27.6, 22.41, 20.77, 31.91, 32.16, 30.36, 24.65, 33.51, 33.77, 25.88, 35.38, 33.4, 27.12, 25.93, 36.3, 29.83, 27.23, 38.12, 31.32, 30.83, 39.93, 32.81, 32.37, 34.45, 33.11, 33.99, 36.18, 34.75, 35.71, 40.94, 37.97, 36.5, 36.49, 37.49, 42.99, 39.88, 38.32, 38.82, 43.09, 45.66, 44.53, 42.7, 45.24, 47.95, 46.74, 44.84, 47.4, 50.23, 50.31, 48.98, 44.86, 36.09, 24.57, 20.81, 17.4, 15.72, 13.99, 12.43, 10.86, 9.41, 8, 6.74, 5.43, 4.27, 3.16, 2.3, 1.73, 0.85, 0.47, 0.37, 0.31, 0.25, 0.23, 0.21, 0.19, 0.19, 0.17, 0.15, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            // console.log(yData.map((i)=>Number((i*1.1).toFixed(2))))
            // console.log([17.4, 19.96, 21.75, 22.54, 22.54, 18.52, 16.1].map((i)=>Number((i*1.05).toFixed(2))))
            break;
        case 16:
            yData=[
                0, 0, 0, 0, 0.77, 1.9, 3.75, 5.67, 7.55, 10.08, 12.55, 17.14, 20.77, 24.65, 31.91, 30.36, 24.65, 22.85, 35.1, 35.38,27.12, 36.86, 37.15, 28.47, 38.92, 36.74, 29.83, 28.52, 39.93, 32.81, 29.95, 41.93,
                34.45, 33.91,36.09,
                36.17, 35.61,37.89,
                35.61, 37.9, 36.42, 37.39, 39.8, 38.23, 39.28, 45.03, 41.77, 40.15, 40.14, 41.24, 47.29, 43.87, 42.15, 42.7, 47.4, 50.23, 48.98, 46.97, 49.76, 52.75, 51.41, 49.32, 52.14, 55.25, 55.34, 53.88, 49.35, 39.7, 27.03, 22.89, 19.14, 17.29, 15.39, 13.67, 11.95, 10.35, 8.8, 7.41, 5.97, 4.7, 3.48, 2.53, 1.9, 0.94, 0.52, 0.41, 0.34, 0.28, 0.25, 0.23, 0.21, 0.21, 0.19, 0.17, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 17:
            yData=[
                0, 0, 0, 0, 0.85, 2.09, 4.13, 6.24, 8.3, 11.09, 13.81, 18.85, 22.85, 27.12, 35.1, 27.12, 25.14, 38.61, 38.92, 29.83, 40.55, 40.87, 31.32, 42.81, 32.81, 31.37, 43.92, 36.09,
                32.95, 37.9, 37.3,
                34.6,39.8, 39.16,
                39.7, 39.79, 39.17, 41.68, 39.17, 41.69, 40.06, 41.13, 43.78, 42.05, 43.21, 49.53, 45.95, 44.16, 44.15, 45.36, 52.02, 48.26, 46.37, 46.97, 52.14, 55.25, 53.88, 51.67, 54.74, 58.03, 56.55, 54.25, 57.35, 60.78, 60.87, 59.27, 54.29, 43.67, 29.73, 25.18, 21.05, 19.02, 16.93, 15.04, 13.14, 11.38, 9.68, 8.15, 6.57, 5.17, 3.83, 2.78, 2.09, 1.03, 0.57, 0.45, 0.37, 0.31, 0.28, 0.25, 0.23, 0.23, 0.21, 0.19, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 18:
            yData=[
                0, 0, 0, 0, 0.94, 2.3, 4.54, 6.86, 9.13, 12.2, 15.19, 20.74, 25.14, 29.83, 38.61, 29.83, 27.65, 42.47, 42.81, 32.81, 44.61, 44.96, 34.45, 47.09, 36.09, 34.51, 48.31, 39.7, 36.25, 41.69, 41.03, 38.06, 43.78, 43.08, 43.67, 43.77, 43.09, 45.85, 43.09, 45.86, 44.07, 45.24, 48.16, 46.26, 47.53, 54.48, 50.55, 48.58, 48.57, 49.9, 57.22, 53.09, 51.01, 51.67, 57.35, 60.78, 59.27, 56.84, 60.21, 63.83, 62.21, 59.68, 63.09, 66.86, 66.96, 65.2, 59.72, 48.04, 32.7, 27.7, 23.16, 20.92, 18.62, 16.54, 14.45, 12.52, 10.65, 8.97, 7.23, 5.69, 4.21, 3.06, 2.3, 1.13, 0.63, 0.5, 0.41, 0.34, 0.31, 0.28, 0.25, 0.25, 0.23, 0.21, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 19:
            yData=[
                0, 0, 0, 0, 1.03, 2.53, 4.99, 7.55, 10.04, 13.42, 16.71, 22.81, 27.65, 32.81, 42.47, 32.81, 46.72,36.09, 49.07, 37.9, 51.8,
                39.7, 37.96,  43.67, 39.88,
                41.69, 39.86, 45.85, 41.87,
                45.86, 45.13, 41.87, 48.16, 47.39, 48.04, 48.15, 47.4, 50.44, 47.4, 50.45, 48.48, 49.76, 52.98, 50.89, 52.28, 59.93, 55.61, 53.44, 53.43, 54.89, 62.94, 58.4, 56.11, 56.84, 63.09, 66.86, 65.2, 62.52, 66.23, 70.21, 68.43, 65.65, 69.4, 73.55, 73.66, 71.72, 65.69, 52.84, 35.97, 30.47, 25.48, 23.01, 20.48, 18.19, 15.9, 13.77, 11.72, 9.87, 7.95, 6.26, 4.63, 3.37, 2.53, 1.24, 0.69, 0.55, 0.45, 0.37, 0.34, 0.31, 0.28, 0.28, 0.25, 0.23, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 20:
            yData=[
                0, 0, 0, 0, 1.13, 2.78, 5.49, 8.3, 11.04, 14.76, 18.38, 25.09, 30.41, 36.09, 46.72, 36.09, 39.7,
                41.69, 43.67, 41.76,
                43.77, 45.85, 43.85,
                48.04, 43.87, 45.86, 43.85, 50.44, 46.06, 50.45, 49.64, 46.06, 52.98, 52.13, 52.84, 52.97, 52.14, 55.48, 52.14, 55.5, 53.33, 54.74, 58.28, 55.98, 57.51, 65.92, 61.17, 58.78, 58.77, 60.38, 69.23, 64.24, 61.72, 62.52, 69.4, 73.55, 71.72, 68.77, 72.85, 77.23, 75.27, 72.22, 76.34, 80.91, 81.03, 78.89, 72.26, 58.12, 39.57, 33.52, 28.03, 25.31, 22.53, 20.01, 17.49, 15.15, 12.89, 10.86, 8.75, 6.89, 5.09, 3.71, 2.78, 1.36, 0.76, 0.61, 0.5, 0.41, 0.37, 0.34, 0.31, 0.31, 0.28, 0.25, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 21:
            yData=[
                0, 0, 0, 0, 1.24, 3.06, 6.04, 9.13, 12.14, 16.24, 20.22, 27.6,
                33.45, 39.7, 39.7,
                35.12, 41.69,
                45.86, 48.04, 45.94, 48.15, 50.44, 48.24, 52.84, 48.26, 50.45, 48.24, 55.48, 50.67, 55.5, 54.6, 50.67, 58.28, 57.34, 58.12, 58.27, 57.35, 61.03, 57.35, 61.05, 58.66, 60.21, 64.11, 61.58, 63.26, 72.51, 67.29, 64.66, 64.65, 66.42, 76.15, 70.66, 67.89, 68.77, 76.34, 80.91, 78.89, 75.65, 80.14, 84.95, 82.8, 79.44, 83.97, 89, 89.13, 86.78, 79.49, 63.93, 43.53, 36.87, 30.83, 27.84, 24.78, 22.01, 19.24, 16.67, 14.18, 11.95, 9.63, 7.58, 5.6, 4.08, 3.06, 1.5, 0.84, 0.67, 0.55, 0.45, 0.41, 0.37, 0.34, 0.34, 0.31, 0.28, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 22:
            yData=[
                0, 0, 0, 0, 1.36, 3.37, 6.64, 10.04, 13.35, 17.86, 22.24, 30.36, 36.8, 43.67, 43.67, 38.63, 45.86, 50.45, 52.84, 50.53, 52.97, 55.48, 53.06, 58.12, 53.09, 55.5, 53.06, 61.03, 55.74, 61.05, 60.06, 55.74, 64.11, 63.07, 63.93, 64.1, 63.09, 67.13, 63.09, 67.16, 64.53, 66.23, 70.52, 67.74, 69.59, 79.76, 74.02, 71.13, 71.12, 73.06, 83.77, 77.73, 74.68,
                86.78, 83.22,
                79.43, 88.17, 91.12, 87.38,
                88.15, 93.45, 91.08, 87.38, 92.37, 98.04, 95.46, 87.44, 70.32, 47.88, 40.56, 33.91, 30.62, 27.26, 24.21, 21.16, 18.34, 15.6, 13.14, 10.59, 8.34, 6.16, 4.49, 3.37, 1.65, 0.92, 0.74, 0.61, 0.5, 0.45, 0.41, 0.37, 0.37, 0.34, 0.31, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            console.log(yData.map((i)=>Number((i*1.1).toFixed(2))))
            break;
        case 23:
            yData=[
                0, 0, 0, 0, 1.5, 3.71, 7.3, 11.04, 14.69, 19.65, 24.46, 33.4, 40.48, 48.04, 48.04, 42.49, 55.5, 58.12, 55.58, 58.27, 61.03, 58.37, 63.93, 58.4, 61.05, 58.37, 67.13, 61.31, 67.16, 66.07, 61.31, 70.52, 69.38, 70.32,69.4, 73.84, 69.4, 73.88, 70.98, 72.85, 77.57,
                74.51, 76.55, 81.42, 78.24,
                78.24, 80.38, 85.49, 82.15,
                80.37, 92.15, 85.5, 82.15, 95.46, 91.54, 87.37, 96.99, 100.23, 96.12, 96.97, 102.8, 100.19, 96.12, 101.61, 107.84, 105.01, 96.18, 77.35, 52.67, 44.62, 37.3, 33.68, 29.99, 26.63, 23.28, 20.17, 17.16, 14.45, 11.65, 9.17, 6.78, 4.94, 3.71, 1.81, 1.01, 0.81, 0.67, 0.55, 0.5, 0.45, 0.41, 0.41, 0.37, 0.34, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 24:
            yData=[
                0, 0, 0, 0, 1.65, 4.08, 8.03, 12.14, 16.16, 21.61, 26.91, 36.74, 44.53, 52.84, 52.84, 46.74, 61.05, 63.93, 61.14, 67.13, 64.21, 70.32, 64.24, 67.16, 64.21, 73.84, 67.44, 73.88, 72.68, 67.44, 77.57, 76.32, 76.34, 81.22, 76.34, 81.27, 78.08, 80.14, 85.33, 81.96, 84.2, 89.56, 86.06, 86.06,94.04, 90.37, 88.41, 101.37, 94.05, 90.37, 105.01, 100.69, 96.11, 110.25, 105.73, 106.67, 113.08, 110.21,
                105.73, 111.77, 118.62, 115.51, 105.8,
                117.36, 124.55, 121.29, 111.09,
                85.08, 57.94, 49.08, 41.03, 37.05, 32.99, 29.29, 25.61, 22.19, 18.88, 15.9, 12.82, 10.09, 7.46, 5.43, 4.08, 1.99, 1.11, 0.89, 0.74, 0.61, 0.55, 0.5, 0.45, 0.45, 0.41, 0.37, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
        break;
        case 25:
            yData=[
                0, 0, 0, 0, 1.81, 4.49, 8.83, 13.35, 17.78, 23.77, 29.6, 40.41, 48.98, 58.12, 58.12, 67.16, 70.32, 67.25, 73.84, 70.63, 77.35, 70.66, 73.88, 70.63, 81.22,
                74.18, 81.27, 79.95,
                77.89, 85.33, 83.95,
                85.33, 83.95, 83.97, 89.34, 83.97, 89.4, 85.89, 88.15, 93.86, 90.16, 92.62, 98.52, 94.67, 94.67, 103.44, 99.41, 97.25, 111.51, 103.45, 99.41, 115.51, 110.76, 105.72, 121.28, 116.3, 117.34, 124.39, 121.23, 116.3, 122.95, 127.06, 116.38, 129.1, 137, 133.42, 122.2, 93.59, 63.73, 53.99, 45.13, 40.76, 36.29, 32.22, 28.17, 24.41, 20.77, 17.49, 14.1, 11.1, 8.21, 5.97, 4.49, 2.19, 1.22, 0.98, 0.81, 0.67, 0.61, 0.55, 0.5, 0.5, 0.45, 0.41, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 26:
        yData=[
            0, 0, 0, 0, 1.99, 4.94, 9.71, 14.69, 19.56, 26.15, 32.56, 44.45, 53.88, 63.93, 63.93, 73.88, 77.35, 73.98, 81.22, 77.69, 85.08, 77.73, 81.27, 77.69, 89.34, 81.6, 89.4, 87.95, 85.68, 93.86, 92.35, 92.35, 92.37, 98.27, 92.37, 98.34, 94.48, 96.97, 103.25, 99.18, 101.88, 108.37, 104.14, 104.14, 113.78, 109.35, 106.98,  113.8, 109.35,116.29, 133.41, 127.93, 129.07, 136.83, 133.35,
            127.93, 135.25, 139.77, 128.02,
            134.33, 142.01, 146.76, 134.42,
            142.01, 150.7, 146.76, 134.42, 102.95, 70.1, 59.39, 49.64, 44.84, 39.92, 35.44, 30.99, 26.85, 22.85, 19.24, 15.51, 12.21, 9.03, 6.57, 4.94, 2.41, 1.34, 1.08, 0.89, 0.74, 0.67, 0.61, 0.55, 0.55, 0.5, 0.45, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
        break;
        case 27:
            yData=[0, 0, 0, 0, 2.19, 5.43, 10.68, 16.16, 21.52, 28.77, 35.82, 48.9, 59.27, 70.32, 70.32, 81.27, 85.08, 81.38, 89.34, 85.46, 93.59, 85.5, 89.4, 85.46, 98.27, 89.76, 98.34, 96.75, 94.25, 103.25, 101.59, 101.59, 101.61, 108.1, 101.61, 108.17, 103.93, 106.67, 113.58, 109.1, 112.07, 119.21, 114.55, 114.55, 125.16,
                120.28, 117.68, 125.18,
                126.29, 123.56, 131.44,
                120.28, 146.75, 140.72, 141.98, 150.51, 146.69, 140.72, 148.78, 153.75, 140.82,156.21, 161.44, 147.86, 165.77, 161.44, 147.86, 113.25, 77.11, 65.33, 54.6, 49.32, 43.91, 38.98, 34.09, 29.54, 25.14, 21.16, 17.06, 13.43, 9.93, 7.23, 5.43, 2.65, 1.47, 1.19, 0.98, 0.81, 0.74, 0.67, 0.61, 0.61, 0.55, 0.5, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 28:
            yData=[0, 0, 0, 0, 2.41, 5.97, 11.75, 17.78, 23.67, 31.65, 39.4, 53.79, 65.2, 77.35, 77.35, 89.4, 93.59, 89.52, 98.27, 94.01, 102.95, 94.05, 98.34, 94.01, 108.1, 98.74, 108.17, 106.43, 103.68, 113.58, 111.75, 111.75, 111.77, 118.91, 111.77, 118.99, 114.32, 117.34, 124.94, 120.01, 123.28, 131.13, 126.01, 126.01, 137.68, 132.31, 129.45, 137.7, 138.92, 135.92, 144.58,
                132.31, 161.43,
                138.93, 169.5, 162.53, 163.99,
                154.79, 163.66, 169.13, 154.9, 171.83, 177.58, 162.65, 182.35, 177.58, 162.65, 124.58, 84.82, 71.86, 60.06, 54.25, 48.3, 42.88, 37.5, 32.49, 27.65, 23.28, 18.77, 14.77, 10.92, 7.95, 5.97, 2.92, 1.62, 1.31, 1.08, 0.89, 0.81, 0.74, 0.67, 0.67, 0.61, 0.55, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 29:
            yData=[0, 0, 0, 0, 2.65, 6.57, 12.93, 19.56, 26.04, 34.81, 43.34, 59.17, 71.72, 85.08, 85.08, 98.34, 102.95, 98.47, 108.1, 103.41, 113.25, 103.45, 108.17, 103.41, 118.91, 108.61, 118.99, 117.07, 114.05, 124.94, 122.93, 122.93, 122.95, 130.8, 122.95, 130.89, 125.75, 129.07, 137.43, 132.01, 135.61, 144.24, 138.61, 138.61, 151.45, 145.54, 142.4, 151.47, 152.81, 149.51, 159.04,
                145.54,
                152.82,160.46,
                186.45, 178.78, 180.39, 170.27, 180.03, 186.04, 170.39, 189.01, 195.34, 178.92, 200.59, 195.34, 178.92, 137.04, 93.3, 79.05, 66.07, 59.68, 53.13, 47.17, 41.25, 35.74, 30.41, 25.61, 20.65, 16.25, 12.01, 8.75, 6.57, 3.21, 1.78, 1.44, 1.19, 0.98, 0.89, 0.81, 0.74, 0.74, 0.67, 0.61, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
        case 30:
            yData=[0, 0, 0, 0,1.21, 2.92, 7.23, 14.22, 21.52, 28.64, 38.29, 47.67, 65.09, 78.89, 93.59, 93.59, 108.17, 113.25, 108.32, 118.91, 113.75, 124.58, 113.8, 118.99, 113.75, 130.8, 119.47, 130.89, 128.78, 125.46, 137.43, 135.22, 135.22, 135.25, 143.88, 135.25, 143.98, 138.33, 141.98, 151.17, 145.21, 149.17, 158.66, 152.47, 152.47, 166.59, 160.09, 156.64, 166.62, 168.09, 164.46, 174.94, 160.09,
                197.43,
                185.34, 208.35,
                187.3, 198.03, 204.64, 187.43, 214.87,213.66, 196.81, 220.65,218.8, 214.87, 196.81, 150.74, 102.63, 86.95, 72.68, 65.65, 58.44, 51.89, 45.38, 39.31, 33.45, 28.17, 22.71, 17.88, 13.21, 9.63, 7.23, 3.53, 1.96, 1.58, 1.31, 1.08, 0.98, 0.89, 0.81, 0.81, 0.74, 0.67, 0.04, 0.04, 0.03, 0.02, 0.01, 0];
            break;
    }
    return {
        xData,
        yData,
    }
}
newArr([
    0, 0, 0, 0,1.21, 2.92, 7.23, 14.22, 21.52, 28.64, 38.29, 47.67, 65.09, 78.89, 93.59, 93.59, 108.17, 113.25, 108.32, 118.91, 113.75, 124.58, 113.8, 118.99, 113.75, 130.8, 119.47, 130.89, 128.78, 125.46, 137.43, 135.22, 135.22, 135.25, 143.88, 135.25, 143.98, 138.33, 141.98, 151.17, 145.21, 149.17, 158.66, 152.47, 152.47, 166.59, 160.09, 156.64, 166.62, 168.09, 164.46, 174.94, 160.09,
    197.43,
    185.34, 208.35,
    187.3, 198.03, 204.64, 187.43, 214.87,213.66, 196.81, 220.65,218.8, 214.87, 196.81, 150.74, 102.63, 86.95, 72.68, 65.65, 58.44, 51.89, 45.38, 39.31, 33.45, 28.17, 22.71, 17.88, 13.21, 9.63, 7.23, 3.53, 1.96, 1.58, 1.31, 1.08, 0.98, 0.89, 0.81, 0.81, 0.74, 0.67, 0.04, 0.04, 0.03, 0.02, 0.01, 0
])
function newArr(arr) {
    var arr2=arr,newA=[];
    for(var i=30;i>0;i--){
        newA=arr2.map((j)=>Number((j/1.01).toFixed(2)))
        arr2=newA;
        console.log(newA,i)
    }
    // return arr2
}
function tempX(aArr,bArr,percentArr) {
    var arr=[],brr=[];
    for(var i=0;i<aArr.length;i++){
        for(var j=0;j<bArr.length;j++){
            arr[arr.length]=typeof(bArr[j])=='number'?bArr[j]*percentArr[i]:bArr[j]
            brr[brr.length]=aArr[i]+j*aArr[i]/bArr.length+'Hz'
        }

    }
       // console.log('arr',arr)
       // console.log('brr',brr)
    return{
        Num:arr,
        Str:brr
    }
}



/**
 * type  1表示是频率实验,无表示电压实验
 * @param type
 * @returns {Array}
 */
function powerArr(type){
    var a=[],b=0.1;
    if(type==1){
        for(var i=1;i<=30;i++){
            a.push(i)
        }
    }else{
        for(b;b<=1.5;b+=0.02){
            a[a.length]=b.toFixed(2)
        }
    }
    return a;
}

function transform_ydata(array,k) {
    return array.map(function (item) {
//            return typeof (item)==="number"?item*k:item
        return (item*k).toFixed(2)
    })
}



function transform_xdata(array,count) {
    return array.map(function (item) {
        return (parseInt(Math.round(item*count*100)))/100
    })
}

$(function(){
    $("#exper").html('<div id="main"></div>').show()
    voltage.yData=[]
    chart('main',voltage)
})

/**
 * 根据传入的强度增量,X轴最值,最大刺激强度生成一个X轴坐标数组
 * @param step 强度增量 Number
 * @param target X轴最值 Number
 * @param max   最大刺激强度 Number
 * @returns {Array}
 */
function createX(step,target) {
    var arr=[];arr[0]=.1
    for(var i=1;arr[i-1]<target;i++){
        var a;
        if(arr[i-1]<target/3){
            a=arr[i-1]+step/2
        }else if(arr[i-1]<target/2){
            a=arr[i-1]+step
        }else{
            a=arr[i-1]+step*2
        }
        arr[i]=parseFloat(a.toFixed(2))
    }
    return arr;
}

/**
 * 根据传入的X轴坐标数组和Y轴模板数组,通过不同的放大倍数,将模板数组进行处理,并组成数组返回
 * @param Xarr X轴坐标数组 Array
 * @param Yarr  Y轴模板数组 Array  对于数字将会进行处理,字符串不处理
 * @returns {Array}
 */
function createY(Xarr,Yarr,max) {
    var newArr=[],aaa='';
    for(var i=0,e=0;i<Xarr.length;i++){
        if(typeof(Yarr[e])=='number'){
            aaa=Xarr[i]>max?max:Xarr[i];
            var a=Yarr[e]*aaa;
            newArr[i]=parseFloat(a.toFixed(2))
        }else {
            newArr[i]=Yarr[e]
        }
        e++
        if(e==Yarr.length){
            e=0
        }
    }
    return newArr
}

function chart(obj_id,obj){
    obj.color=obj.color||"rgb(219,50,51)";
    obj.chart_end=500/obj.yData.length;
    obj.chart_end=obj.chart_end>30?obj.chart_end:30;
    if(obj.name==="frequency")obj.chart_end=100;
    echarts.init(document.getElementById(obj_id)).setOption(
        {
            backgroundColor: '#394056',
            title: {
                text: obj.title,
                textStyle: {
                    fontWeight: 'normal',
                    fontSize: 16,
                    color: '#F1F1F3'
                },
                left: '6%'
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    lineStyle: {
                        color: '#57617B'
                    }
                }
            },
            legend: {
                icon: 'rect',
                itemWidth: 10,
                itemHeight: 5,
                itemGap: 13,
                data: obj.tip,
                right: '4%',
                textStyle: {
                    fontSize: 12,
                    color: '#F1F1F3'
                }
            },
            dataZoom: [
                {
                    // show: true,
                    show: false,
                    realtime: true,
                    start: 0,
                    end: obj.chart_end||100,

                    // x:10,
                    // y:180,
                    // top:0,
                    // bottom:0
                },
                {
                    type: 'inside',
                    realtime: true,
                    start: 0,
                    end: 10
                }
            ],
            grid: {
                left: '3%',
                right: '4%',
                bottom: '3%',
                containLabel: true
            },
            xAxis: [{
                type: 'category',
                boundaryGap: false,
                axisLine: {
                    lineStyle: {
                        color: '#57617B'
                    }
                },
                data: obj.xData
            }],
            yAxis: [{
                name:"收缩力(/g)",
                type: 'value',
                axisTick: {
                    show: false
                },
                axisLine: {
                    lineStyle: {
                        color: '#57617B'
                    }
                },
                axisLabel: {
                    margin: 10,
                    textStyle: {
                        fontSize: 14
                    }
                },
                splitLine: {
                    lineStyle: {
                        color: '#57617B'
                    }
                }
            }],
            series: [
                {
                    name: obj.tip[0],
                    type: 'line',
                    smooth: true,
                    symbol: 'circle',
                    symbolSize: 5,
                    showSymbol: false,
                    lineStyle: {
                        normal: {
                            width: 1
                        }
                    },
                    areaStyle: {
                        normal: {
                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                offset: 0,
                                color:obj.color.replace('rgb','rgba').replace(')',', 0.3)')
                                //color: 'rgba(137, 189, 27, 0.3)'
                            }, {
                                offset: 0.8,
                                color: obj.color.replace('rgb','rgba').replace(')',', 0)')
                            }], false),
                            shadowColor: 'rgba(0, 0, 0, 0.1)',
                            shadowBlur: 10
                        }
                    },
                    itemStyle: {
                        normal: {
                            color: obj.color,
                            borderColor: obj.color.replace('rgb','rgba').replace(')',', 0.27)'),
                            borderWidth: 12

                        }
                    },
                    data: obj.yData
                }
            ]
        })
}
export default{
    name:"animalExper0",
    data(){
        return{
            myChart:'',
            show:true,
            addUp:false,
            addAuto:"",
            powerInput:"",//强度选则显示
            isSeries:false,
            stimulatioStyle:"2",//实验方法 1电压,2频率
            stimulatioImpu:'1',
            experStyle:[
                {
                    label: '电压',
                    value: '1',
                },
                {
                    label: '频率',
                    value: '2'
                }
            ],
            experImpu1:[
                {
                    label: '单刺激',
                    value: '1'
                },
                {
                    label: '自动强度刺激',
                    value: '2'
                }
            ],
            experImpu2:[
                {
                    label:'串刺激',
                    value:'3'
                }
            ],
            winsHeight:window.screen.height,
            single_ydata:[],
            single_xdata:[],
            single_count:0,
            powerChoose: {//电压实验时强度选择
                values: powerArr(),
                select:0,
                series_text:"自动强度刺激",
                intervalNum:""
            },
            powerChoose2: {//频率实验时强度选择
                values: powerArr(1),
                select:0,
                series_text:"自动强度刺激",
                intervalNum:""
            },
        }
    },
    mounted(){
        this.longPress()
    },
    methods:{
        longPress() {
            var timer="",btn=$("#powerAdd,#powerSub,#powerAdd2,#powerSub2"),_this=this,type=-1;
            // $.each(btn,function (index,item) {
            //     let  timerId="";
            //     item.addEventListener('touchstart',function (e) {
            //         type=e.target.id.indexOf("A")>0?1:-1;
            //         timerId=setInterval(function () {
            //             _this.onValuesChange(type)
            //         },100)
            //     })
            //     item.addEventListener('touchend',function () {
            //         clearInterval(timerId)
            //     })
            //     setTimeout(()=>{clearInterval(timerId),1000})
            // })
            btn.on('touchstart',function (e) {
                type=e.target.id.indexOf("A")>0?1:-1;
                timer=setInterval(function () {
                    _this.onValuesChange(type)
                },100)
            })
            btn.on("touchend",function () {
                clearInterval(timer)
            })
        },
        onValuesChange(type){
            var obj=this.powerChoose;
            if(this.stimulatioStyle=="2")obj=this.powerChoose2;
            if(type>0){
                if(obj.select>obj.values.length-2){
                    obj.select=obj.values.length-1
                }else{
                    obj.select+=1
                }
            }else{
                if(obj.select<1){
                    obj.select=0
                }else{
                    obj.select-=1
                }
            }
        },
        single_ciji(type){
            var obj=this.powerChoose;
            this.addAuto=false;
            if(type==0){
                if(this.isSeries){
                    this.isSeries=false
                    obj.series_text='自动强度刺激'
                    this.single_count=0
                    this.single_ydata=[]
                    clearInterval(obj.intervalNum)
                }
            }
            $("#exper").html('<div id="main"></div>').show()
            if(this.single_count==0){
                this.single_xdata=[];
            }
            //电压单刺激的时候,每次只有一个波形,并且波形不累加
            if(type==0&&this.stimulatioStyle=="1"){
                this.single_count=1
                this.single_ydata=transform_ydata(single_ytemp,obj.values[obj.select])
                // this.single_ydata=[0,5,10,15,20,25,30]
                this.single_xdata=single_xtemp
            }else{//自动刺激的时候,波形累加
                this.single_count+=1;
                this.single_ydata=this.single_ydata.concat(transform_ydata(single_ytemp,obj.values[obj.select]))
                this.single_xdata=this.single_xdata.concat(single_xtemp)
            }
            voltage.yData=this.single_ydata
            voltage.xData=this.single_xdata
            chart('main',voltage)
        },
        series_ciji(){
            voltage.yData=[]
            voltage.xData=[]
            this.isSeries=true;
            var obj=this.powerChoose,_this=this;
            if(obj.series_text=="自动强度刺激"){
                _this.single_ciji(1)
                obj.intervalNum=setInterval(function () {
                    _this.single_ciji(1)
                },1400)
                obj.series_text='停止刺激'
            }else{
                obj.series_text='自动强度刺激'
                this.single_count==0
                clearInterval(obj.intervalNum)
            }
        },
        experMethod(){
            this.stimulatioImpu=this.stimulatioStyle=='1'?'1':'3';
            this.addAuto=false;
            this.powerChoose.series_text='自动强度刺激'
            clearInterval(this.powerChoose.intervalNum)
        },
        isAddUp(){
            var obj=this.powerChoose;
            if(this.addAuto){
                if(obj.series_text=='停止刺激'){
                    obj.series_text='自动强度刺激'
                    this.single_count=0
                    this.single_ydata=[]
                    clearInterval(obj.intervalNum)
                }
                if(this.stimulatioStyle=='1'){
                    $("#exper").html('<div id="main2"></div>').show()
                    this.single_count=0
                    this.single_ydata=[]
                    voltage.xData=createX(.02,2.0)
                    voltage.yData=createY(voltage.xData,[ '1.2', '1.3', 15,  '1.3', '1.2'],1.38)
                    chart('main2',voltage)
                }else{
                    var str,idName,obj;
                    str='<div id="main2"></div>';
                    idName='main2';
                    var d=tempX([1,2,3,4,6,12,24],['1','1.2',10,12,13.2,11,7,'1.2','1'],[.1,.2,.3,.4,.8,2.2,2.5])
                    frequency.xData=d.Str
                    frequency.yData=d.Num
                    obj=frequency
                    $("#exper").html(str).show()
//                this.main1=true
                    chart(idName,obj)
                }
            }else{

            }
        },
        vue_charts(type){

            var str,idName,obj;
            if(this.stimulatioStyle=="1"){
                str='<div id="main"></div>';
                idName='main';
                obj=voltage
            }else{
                str='<div id="main2"></div>';
                idName='main2';
                var d=frequency_data(this.powerChoose2.values[this.powerChoose2.select])
                frequency.xData=d.xData
                frequency.yData=d.yData
                frequency.chart_end=100
                obj=frequency
            }
            $("#exper").html(str).show()
//                this.main1=true
            chart(idName,obj)
        },
        return_text(){
            $("#exper").hide()
        },
        styleChange(){
            if(this.stimulatioImpu=='1'){
                voltage.xData=createX(.02,2.0)
                voltage.yData=createY(voltage.xData,['1.2', '1.3',  15,  '1.3', '1.2'],1.38)
            }else if(this.stimulatioImpu=='2'){
                voltage.xData=createX(.05,3.0)
                voltage.yData=createY(voltage.xData,[ '1.2', '1.3',  15,  '1.3', '1.2'],1.38)
            }
        }
    }
}
